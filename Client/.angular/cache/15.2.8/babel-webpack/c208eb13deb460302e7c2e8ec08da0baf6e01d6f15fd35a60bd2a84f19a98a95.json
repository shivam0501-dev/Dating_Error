{"ast":null,"code":"import { BehaviorSubject, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AccountService {\n  constructor(_http) {\n    this._http = _http;\n    this.baseUrl = \"http://localhost:5019/api/\";\n    this.CurrentUserSource = new BehaviorSubject(null);\n    this.currentUser$ = this.CurrentUserSource.asObservable();\n  }\n  ngOnInit() {}\n  login(model) {\n    return this._http.post(this.baseUrl + \"Account/Login\", model).pipe(map(response => {\n      const user = response;\n      if (user) {\n        localStorage.setItem(\"user\", JSON.stringify(user));\n        this.CurrentUserSource.next(user);\n      }\n    }));\n  }\n  register(model) {\n    return this._http.post(this.baseUrl + \"Account/register\", model).pipe(map(user => {\n      if (user) {\n        localStorage.setItem(\"user\", JSON.stringify(user));\n        this.CurrentUserSource.next(user);\n      }\n      return user;\n    }));\n  }\n  setCurrentUser(user) {\n    localStorage.setItem('user', JSON.stringify(user));\n    this.CurrentUserSource.next(user);\n  }\n  logout() {\n    localStorage.removeItem(\"user\");\n    this.CurrentUserSource.next(null);\n  }\n}\nAccountService.ɵfac = function AccountService_Factory(t) {\n  return new (t || AccountService)(i0.ɵɵinject(i1.HttpClient));\n};\nAccountService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AccountService,\n  factory: AccountService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,eAAe,EAAEC,GAAG,QAAQ,MAAM;;;AAM3C,OAAM,MAAOC,cAAc;EAKzBC,YAAoBC,KAAgB;IAAhB,UAAK,GAALA,KAAK;IAJ3B,YAAO,GAAC,4BAA4B;IAE5B,sBAAiB,GAAC,IAAIJ,eAAe,CAAc,IAAI,CAAC;IAChE,iBAAY,GAAC,IAAI,CAACK,iBAAiB,CAACC,YAAY,EAAE;EACR;EAExCC,QAAQ,IAER;EAEAC,KAAK,CAACC,KAAS;IACb,OAAO,IAAI,CAACL,KAAK,CAACM,IAAI,CAAO,IAAI,CAACC,OAAO,GAAC,eAAe,EAACF,KAAK,CAAC,CAACG,IAAI,CACnEX,GAAG,CAAEY,QAAa,IAAG;MACnB,MAAMC,IAAI,GAACD,QAAQ;MACnB,IAAGC,IAAI,EAAC;QACNC,YAAY,CAACC,OAAO,CAAC,MAAM,EAACC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;QACjD,IAAI,CAACT,iBAAiB,CAACc,IAAI,CAACL,IAAI,CAAC;;IAErC,CAAC,CAAC,CACH;EACH;EAEAM,QAAQ,CAACX,KAAS;IAEhB,OAAO,IAAI,CAACL,KAAK,CAACM,IAAI,CAAO,IAAI,CAACC,OAAO,GAAC,kBAAkB,EAACF,KAAK,CAAC,CAACG,IAAI,CACtEX,GAAG,CAAEa,IAAI,IAAG;MACV,IAAGA,IAAI,EAAC;QACNC,YAAY,CAACC,OAAO,CAAC,MAAM,EAACC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;QACjD,IAAI,CAACT,iBAAiB,CAACc,IAAI,CAACL,IAAI,CAAC;;MAEnC,OAAOA,IAAI;IACb,CAAC,CAAC,CACH;EACH;EACAO,cAAc,CAACP,IAAS;IACtBC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;IAClD,IAAI,CAACT,iBAAiB,CAACc,IAAI,CAACL,IAAI,CAAC;EACnC;EAEAQ,MAAM;IACJP,YAAY,CAACQ,UAAU,CAAC,MAAM,CAAC;IAC/B,IAAI,CAAClB,iBAAiB,CAACc,IAAI,CAAC,IAAI,CAAC;EACnC;;AA3CWjB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAsB,SAAdtB,cAAc;EAAAuB,YAFb;AAAM","names":["BehaviorSubject","map","AccountService","constructor","_http","CurrentUserSource","asObservable","ngOnInit","login","model","post","baseUrl","pipe","response","user","localStorage","setItem","JSON","stringify","next","register","setCurrentUser","logout","removeItem","factory","providedIn"],"sourceRoot":"","sources":["E:\\ShivamAgrahari\\Udemy\\Dating\\Client\\src\\app\\_services\\account.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable, OnInit } from '@angular/core';\nimport { BehaviorSubject, map } from 'rxjs';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService implements OnInit {\nbaseUrl=\"http://localhost:5019/api/\"\n\nprivate CurrentUserSource=new BehaviorSubject<User | null>(null);\ncurrentUser$=this.CurrentUserSource.asObservable();\n  constructor(private _http:HttpClient) { }\n\n  ngOnInit(): void {\n   \n  }\n\n  login(model:any){\n    return this._http.post<User>(this.baseUrl+\"Account/Login\",model).pipe(\n      map((response:User)=>{\n        const user=response;\n        if(user){\n          localStorage.setItem(\"user\",JSON.stringify(user))\n          this.CurrentUserSource.next(user)\n        }\n      })\n    )\n  }\n\n  register(model:any)\n  {\n    return this._http.post<User>(this.baseUrl+\"Account/register\",model).pipe(\n      map((user)=>{\n        if(user){\n          localStorage.setItem(\"user\",JSON.stringify(user))\n          this.CurrentUserSource.next(user)\n        }\n        return user\n      })\n    )\n  }\n  setCurrentUser(user:User){\n    localStorage.setItem('user', JSON.stringify(user));\n    this.CurrentUserSource.next(user);\n  }\n\n  logout(){\n    localStorage.removeItem(\"user\");\n    this.CurrentUserSource.next(null);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}